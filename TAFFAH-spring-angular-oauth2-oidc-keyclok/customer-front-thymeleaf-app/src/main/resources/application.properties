spring.application.name=customer-service
server.port=8090
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true

spring.config.import=optional:configserver:http://localhost:9999


spring.security.oauth2.client.registration.google.clientId=813846744592-pavqu56p9gs3bb78vtj1g0q84lq9shr0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.security.oauth2.client.registration.github.clientId=931cbfab7152f66c8814
spring.security.oauth2.client.registration.github.client-secret=ddf67147d5b6247f3f818f5b1def966a17e47f74
spring.security.oauth2.client.provider.github.user-name-attribute=login


spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=glsid-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=qXTfO4XyjmxPmjW7ZnZjssq46YI2Xgv6
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8090/login/oauth2/code/glsid-customer-client}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/glsid-realm}

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/glsid-realm